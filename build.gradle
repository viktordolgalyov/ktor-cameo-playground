apply plugin: 'application'
mainClassName = 'io.ktor.server.netty.DevelopmentEngine'

buildscript {
    ext.kotlin_version = '1.2.31'
    ext.ktor_version = '0.9.2'
    ext.exposed_version = '0.10.3'

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.cameo.backend'
version '0.1'

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}

repositories {
    mavenCentral()
    maven { url "http://kotlin.bintray.com/ktor" }
    maven { url = "https://dl.bintray.com/kotlin/exposed" }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    runtime "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile 'com.google.code.gson:gson:2.8.5'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    compile "org.jetbrains.exposed:exposed:$exposed_version"
    compile 'com.zaxxer:HikariCP:2.7.8'
    compile group: 'info.movito', name: 'themoviedbapi', version:'1.7'
    compile "ch.qos.logback:logback-classic:1.2.1"
}

defaultTasks 'run'

task wrapper(type: Wrapper) {
    gradleVersion = "4.2"
}

task stage {
    dependsOn installDist
}

jar {
    manifest {
        attributes  'Main-Class': 'io.ktor.server.netty.DevelopmentEngine',
                'Implementation-Title': 'My Project',
                'Implementation-Version': '0.1'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}